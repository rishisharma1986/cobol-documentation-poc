create a cobol cics program which receives input via DFHCOMMAREA into a copybook with variables like cust-ctry,cust-instt,cust-id,instr-ref-num,ac-ctry,ac-instt,ac-no and ac-prod-typ. Then use getmain to secure storage for this copybook. then validate these input variables for not being spaces and low-values. Then use these variables in a sql query where clause to fetch all columns like cust_ctry,cust_instt,cust_id,instr_ref_num,ac_ctry,ac_instt,ac_no,ac_prod_typ,bene_nam,bene_addr1,bene_addr2,bene_addr3,debtor_name,debtor_addr1,debtor_addr2,debtor_addr3,instr_pty from table named payment_instructions in schema name payments. 
---------------------------------------------------------------------------------------------------------------------------------------------------
create a cobol cics program which receives input via DFHCOMMAREA into a copybook with variables like cust-ctry,cust-instt,cust-id,instr-ref-num,ac-ctry,ac-instt,ac-no and ac-prod-typ. Then use getmain to secure storage for this copybook. then validate these input variables for not being spaces and low-values. Then use these variables in a sql query where clause to fetch all columns like cust_ctry,cust_instt,cust_id,instr_ref_num,ac_ctry,ac_instt,ac_no,ac_prod_typ,bene_nam,bene_addr1,bene_addr2,bene_addr3,debtor_name,debtor_addr1,debtor_addr2,debtor_addr3,instr_pty from table named payment_instructions in schema name payments. Put this sql query into a cursor with hold and populate all the payments in a array with 100 instances